// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid()) @db.Uuid
  email      String     @unique
  phone      String
  first_name String
  last_name  String
  login      String     @unique
  wishList   WishList[]
  basket     Basket[]
  order      Order[]
  role       Role
  mail       Mail[]
}

enum Role {
  Customer
  Manager
}

model Book {
  id          String         @id @default(uuid()) @db.Uuid
  name        String
  author      String
  description String
  price       Float
  picture     String
  wishList    WishList[]
  basket      Basket[]
  category    Category[]
  order       OrderedBooks[]
  is_selected Boolean
}

model WishList {
  id      String  @id @default(uuid()) @db.Uuid
  user    User?   @relation(fields: [user_id], references: [id])
  user_id String? @db.Uuid
  book    Book?   @relation(fields: [book_id], references: [id])
  book_id String? @db.Uuid
}

model Basket {
  id      String  @id @default(uuid()) @db.Uuid
  user    User?   @relation(fields: [user_id], references: [id])
  user_id String? @db.Uuid
  book    Book?   @relation(fields: [book_id], references: [id])
  book_id String? @db.Uuid
  amount  Int
}

model Category {
  id    String @id @default(uuid()) @db.Uuid
  name  String
  books Book[]
}

model Mail {
  id    String   @id @default(uuid()) @db.Uuid
  users User[]
  date  DateTime
  title String
  text  String
}

model Faq {
  id       String @id @default(uuid()) @db.Uuid
  question String
  anqwer   String
}

model SpecialOffer {
  id          String @id @default(uuid()) @db.Uuid
  name        String
  description String
  picture     String
}

model Order {
  id           String         @id @default(uuid()) @db.Uuid
  user         User?          @relation(fields: [user_id], references: [id])
  user_id      String?        @db.Uuid
  books        OrderedBooks[]
  date         DateTime
  address      String
  track_number String
  status       Status
}

model OrderedBooks {
  id       String @id @default(uuid()) @db.Uuid
  order    Order  @relation(fields: [order_id], references: [id])
  order_id String @db.Uuid
  book     Book   @relation(fields: [book_id], references: [id])
  book_id  String @db.Uuid
  amount   Int
}

enum Status {
  Success
  InProgress
  Canceled
}
